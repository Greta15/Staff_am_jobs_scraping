# -*- coding: utf-8 -*-
"""Books to scrape.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16v1OxGuWHPT4jgu08MD4fGOkv8a2fXoq
"""

!pip install scrapy

import time
import requests
import numpy as np
import pandas as pd
from scrapy.http import TextResponse
import re

"""# **Books to scrape**"""

def booksto_scrape(url,base_url="http://books.toscrape.com/"):
    page = requests.get(url)
    response = TextResponse(body=page.text,url=url,encoding="utf-8")

    book_title=response.css("h3>a::attr(title)").extract()
    book_rating = response.css("p[class^='star-rating']::attr(class)").extract()
    instock  =response.css("p.price_color ~ p.instock::attr(class)").extract()
    instock_or_not = [i.replace("availability", " ") for i in instock]
    p_price = response.css("p.price_color::text").extract()
    price = [i.replace("Ã‚", "") for i in p_price]
    book_page_URL = response.css("h3 >a::attr(href)").extract()
    book_picture_URL = response.css("img::attr(src)").extract()
    base_url = "http://books.toscrape.com/catalogue/"
    book_page_URL2 = [base_url + i for i in book_page_URL ]
    book_picture_URL2 = [base_url + i for i in book_picture_URL]
    rating = []
    for i in book_rating:
        rating.append(i.replace("star-rating", ""))
    book_genre = []
    book_description = []
    
    for i in book_page_URL2:
        page = requests.get(i)
        response = TextResponse(body=page.text,url=i,encoding="utf-8")

        book_genre.append(response.css("li~li~li > a::text")[0].extract())
        book_description.append(response.css("article[class='product_page'] > p::text").extract_first())
    
    return pd.DataFrame({ "price":price,"book_title":book_title, "rating":rating,"instock_or_not":instock_or_not,"book_genre":book_genre,"book_description":book_description,"book_page_URL2":book_page_URL2,"book_picture_URL2":book_picture_URL2})

bookslist = []
for i in range(1,1000):
    current_page =booksto_scrape(url = f"http://books.toscrape.com/catalogue/page-{i}.html")
    if current_page.shape[0] == 0:
        break
    else:
        bookslist.append(current_page)
bookslist = pd.concat(bookslist)
bookslist

bookslist.to_excel('bookslist.xlsx', index=False)

data=(bookslist["price"])

type(data)

bookslist[bookslist["price"] == bookslist["price"].max()]["book_genre"]

"""The expensive genre is Romance"""

bookslist["price"].max()

bookslist["rating"].value_counts()

"""226 books are one star
203 books are three star and so on
"""